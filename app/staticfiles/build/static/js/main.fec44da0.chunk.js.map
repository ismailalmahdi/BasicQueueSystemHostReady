{"version":3,"sources":["AppContext.js","pages/Welcome.js","components/CustomerTakeANumber.js","services/ServiceApi.js","components/CounterStatusButton.js","components/CounterManagerCard.js","pages/CounterManager.js","components/CustomerCounterStatusCard.js","pages/Customers.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","booking","wishlist","countersOnline","toggleWishlist","toggleCounterStatus","addToCart","removeFromCart","OneCounterList","react_default","a","createElement","className","react_router_dom","to","Component","context","CustomerTakeANumber","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","last_issued_num","latest_serving_num","ServiceApi","getLatestServingCustomer","then","response","setState","results","id","getLatestQueueNumber","self","assertThisInitialized","navigator","serviceWorker","register","ready","addEventListener","event","data","undefined","lastServed","controller","postMessage","_this2","_this3","onClick","takeANumber","retrieveWishlist","_retrieveWishlist","asyncToGenerator","regenerator_default","mark","_callee","config","wrap","_context","prev","next","abrupt","Promise","resolve","sent","Axios","get","stop","apply","arguments","retrieveCounterList","_retrieveCounterList","_callee2","pageIndex","queryParams","_context2","console","log","_x","_x2","getNextCounterInQueue","_getNextCounterInQueue","_callee3","counter","_context3","length","updateCustomerStatus","customer","err","updateCounterNextCustomer","_x3","_getLatestServingCustomer","_callee4","_context4","_getLatestQueueNumber","_callee5","_context5","_updateCounterNextCustomer","_callee6","customerId","_context6","patch","concat","_x4","_x5","_updateCustomerStatus","_callee7","status","_context7","_x6","_x7","_CustomerTakeANumber","_callee8","_context8","post","counterStatus","_counterStatus","_callee9","_context9","sat","_x8","_x9","counterOnlineStatus","_counterOnlineStatus","_callee10","_context10","_x10","CounterStatusButton","item","counterData","updateData","res","_this4","setCounterStatusOnline","setCounterStatusOffline","CounterManagerCard","onClickNexCustomer","toLowerCase","CounterStatusButton_CounterStatusButton","goOfflineAction","goOnlineAction","CounterManager","list","totalItems","updateList","_this$state","filters","count","map","key","CounterManagerCard_CounterManagerCard","nextCustomerAction","bind","contextType","CustomerCounterStatusCard","history","push","CustomerTakeANumber_CustomerTakeANumber","CustomerCounterStatusCard_CustomerCounterStatusCard","App","Provider","value","react_router","path","exact","component","Welcome","Customers","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","registration","onupdatefound","installingWorker","installing","onstatechange","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","fetch","contentType","headers","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fec44da0.chunk.js","sourcesContent":["import React from 'react';\n\nexport const AppContext = React.createContext({\n  booking: null,\n  wishlist: [],\n  countersOnline:[],\n  toggleWishlist: () => {},\n  toggleCounterStatus: () => {},\n  addToCart: () => {},\n  removeFromCart: () => {}\n});\n","import React from 'react';\nimport './Welcome.css';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../AppContext';\n\nexport default class OneCounterList extends React.Component {\n  static context = AppContext;\n\n  render() {\n    return (\n   \n      <div className=\"text-light animate__animated animate__fadeIn\">\n           <div className=\"cover-container d-flex w-100 h-100 p-3 mx-auto flex-column\">\n            <main className=\"mb-auto\">\n              <div className=''>\n                  <h1 className=\"\">Welcome to,</h1>\n                  <h2 className=\"text-warning\">Queue Ticketing System</h2>\n                  <p className=\"lead mr-md-3\">This is a simple queue app </p>\n                  <p className=\"text-warning\"><u> I would like to start as a </u></p>\n                  <p className=\"lead\">\n                      <Link className=\"btn btn-lg btn-secondary \" to=\"/Customers\">Customer</Link>\n                      <Link className=\"btn btn-lg btn-secondary mx-4\" to=\"/Counters\">Counter Manager</Link>\n                  </p>\n                </div>\n            </main>\n            </div>\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\r\nimport ServiceApi from \"../services/ServiceApi\";\r\n\r\nexport default class CustomerTakeANumber extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            last_issued_num : \"None\",\r\n            latest_serving_num: \"None\",\r\n        }\r\n        ServiceApi.getLatestServingCustomer().then((response) => {\r\n            this.setState({\r\n                latest_serving_num: response.results[0].id\r\n            });\r\n        });\r\n\r\n        ServiceApi.getLatestQueueNumber().then((response) => {\r\n            this.setState({\r\n                last_issued_num: response.results[0].id\r\n            });\r\n        });\r\n        \r\n        // local sync across browsers instances \r\n        var self = this;\r\n        if('serviceWorker' in navigator){\r\n            navigator.serviceWorker\r\n            .register('./service-worker.js')\r\n            .then(()=> navigator.serviceWorker.ready).then(() => {\r\n              navigator.serviceWorker.addEventListener('message',function(event){\r\n                if(event.data && event.data.state !== undefined){\r\n                  self.setState({\r\n                        last_issued_num: event.data.state\r\n                    });\r\n                }\r\n              })\r\n            })\r\n          }\r\n        \r\n        // local sync across browsers instances \r\n        var self = this;\r\n        if('serviceWorker' in navigator){\r\n            navigator.serviceWorker\r\n            .register('./service-worker.js')\r\n            .then(()=> navigator.serviceWorker.ready).then(() => {\r\n              navigator.serviceWorker.addEventListener('message',function(event){\r\n                if(event.data && event.data.lastServed !== undefined){\r\n                    \r\n                    self.setState({\r\n                            latest_serving_num: event.data.lastServed\r\n                    });\r\n\r\n                }\r\n              })\r\n            })\r\n          }\r\n    }\r\n\r\n    \r\n   \r\n    async takeANumber(event){\r\n        \r\n        ServiceApi.CustomerTakeANumber().then((response) => {\r\n            // send the message to all other browsers \r\n            if(navigator.serviceWorker && navigator.serviceWorker.controller){\r\n                navigator.serviceWorker.controller.postMessage({\r\n                    state: response.id\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                last_issued_num: response.id\r\n            });\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"col d-flex text-center mx-auto p-5 \">\r\n              <div className=\"  mx-auto p-5 card animate__animated animate__fadeIn \">\r\n                <h2> Now serving : {this.state.latest_serving_num} </h2>\r\n                <h2> Last number : {this.state.last_issued_num} </h2>\r\n                <button\r\n                  className=\"btn btn-lg btn-warning\"\r\n                  onClick={(event) => this.takeANumber(event)}\r\n                >\r\n                  Take a Number\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n    }\r\n} ","import Axios from 'axios';\nimport CustomerTakeANumber from '../components/CustomerTakeANumber';\n\nconst clientId = 'UYpBkKY6vYW72ayc7ovAZ5xvUapQ3a8TucsGI2jS';\nconst clientSecret = 'REvBZR4e1yVflIrF1FAWcLVl08ZtewuxinaQsSNt6XKpxar6v17LvjkrCkKVDqHQUTDCcLfuZfm1V7JQ0C9qdKnYQpbjjjMrYMt76kdzTtE3xGv4ZaxdX9TnLsTeadZu';\n\nlet _accessToken;\n\nexport function getAccessToken() {\n  return new Promise((resolve) => {\n    if (_accessToken) {\n      resolve(_accessToken);\n    } else {\n      const data = {\n        grant_type: 'client_credentials',\n        client_id: clientId,\n        client_secret: clientSecret,\n        scope: 'read'\n      }\n      Axios.post('/o/token/', data).then((response) => {\n        _accessToken = response.data.access_token;\n        resolve(_accessToken);\n      });\n    }\n  });\n}\n\n// not needed for this project \nexport async function getConfig() {\n  const accessToken = await getAccessToken();\n  const config = {\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  };\n  return new Promise((resolve) => {\n    resolve(config);\n  });\n}\n\n\n\nexport default {\n  async retrieveWishlist() {\n    return new Promise(resolve => resolve([1]));\n    const config = await getConfig();\n    return new Promise((resolve) => {\n      Axios.get('/api/v1/wishlist/', config).then((response) => {\n        resolve(response.data);\n      });\n    });\n  },\n\n\n  async retrieveCounterList(pageIndex, queryParams) {\n    const config = {};\n    config['params'] = queryParams;\n    config['params']['page'] = pageIndex;\n    return new Promise((resolve) => {\n      Axios.get('/api/v1/counters/', config).then((response) => {\n        console.log(response.data)\n        resolve(response.data);\n      });\n    });\n  },\n\n  async getNextCounterInQueue(counter){\n    return new Promise(resolve => { \n      Axios.get('api/v1/customers/?search=PN&&limit=1').then((response) => {\n        if(response.data.results.length > 0){\n\n        \n        try{\n          this.updateCustomerStatus(counter.customer,\"SR\")\n        }catch(err){\n\n        };\n        this.updateCounterNextCustomer(counter.id,response.data.results[0].id)\n        this.updateCustomerStatus(response.data.results[0].id,\"SR\")\n        resolve(response.data);\n      }\n      resolve({results: [{id:\"Queue Empty\"}]});\n      });\n    });\n  },\n\n  async getLatestServingCustomer(){\n    return new Promise(resolve => { \n      Axios.get('api/v1/customers/?ordering=-id&search=SR&limit=1').then((response) => {\n        if(response.data.results.length > 0){\n       \n        resolve(response.data);\n      }\n      resolve({results: [{id:\"None\"}]});\n      });\n    });\n  },\n\n  async getLatestQueueNumber(){\n    return new Promise(resolve => { \n      Axios.get('api/v1/customers/?ordering=-id&limit=1').then((response) => {\n        if(response.data.results.length > 0){\n       \n        resolve(response.data);\n      }\n      resolve({results: [{id:\"None\"}]});\n      });\n    });\n  },\n\n  async updateCounterNextCustomer(id,customerId){\n      return new Promise(resolve => {\n        const data = {\n          \"customer\": customerId,\n        }\n        return Axios.patch(`api/v1/counters/${id}/`,data);\n      });\n  },\n\n  async updateCustomerStatus(id,status){\n    return new Promise(resolve => {\n      const data = {\n        \"status\": status,\n      }\n      return Axios.patch(`api/v1/customers/${id}/`,data);\n    });\n  },\n\n  async CustomerTakeANumber(){\n    return new Promise(resolve => {\n      Axios.post(`api/v1/customers/new`).then((response) => {\n        resolve(response.data);\n      });\n    });\n  },\n\n  async counterStatus(id, status){\n    return new Promise(resolve => {\n      let sat = \"ON\";\n      if(!status){\n        sat = \"OF\";\n      }\n      const data = {\n        \"id\" : id,\n        \"status\": sat,\n      }\n      return Axios.patch(`api/v1/counters/${id}/`,data);\n    });\n  },\n\n  async counterOnlineStatus(data){\n    data.customer = null;\n    return new Promise(resolve => {\n      Axios.patch(`api/v1/counters/${data.id}/`,data).then((response) => {\n        resolve(response.data);\n      });\n    });\n  }\n\n}\n","import React from 'react';\nimport './CounterStatusButton.css';\nimport { useState } from 'react';\nimport ServiceApi from '../services/ServiceApi';\n\nexport default class CounterStatusButton extends React.Component{\n\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      data: this.props.item,\n    }\n\n    var self = this;\n    if('serviceWorker' in navigator){\n      navigator.serviceWorker\n      .register('./service-worker.js')\n      .then(()=> navigator.serviceWorker.ready).then(() => {\n          navigator.serviceWorker.addEventListener('message',function(event){\n              if(event.data && event.data.counterData !== undefined){\n              // check is it belong to this component \n              if(event.data.counterData.id == self.state.data.id){\n                  self.setState({\n                      data: event.data.counterData\n                  });\n              }\n              }\n          })\n      })\n    }\n\n  }\n\n\n  async setCounterStatusOnline(event){\n   \n    let updateData = this.state.data\n    updateData[\"status\"] = \"ON\";\n    ServiceApi.counterOnlineStatus(updateData).then( (res)=> {\n      console.log(res)\n      this.setState({ data: res});\n      // update counter status to other browsers \n      if(navigator.serviceWorker && navigator.serviceWorker.controller){\n        navigator.serviceWorker.controller.postMessage({\n          counterData: res \n        });\n      } \n    });\n  }\n\n \n  async setCounterStatusOffline(event){\n      let updateData = this.state.data\n      updateData[\"status\"] = \"OF\";\n      ServiceApi.counterOnlineStatus(updateData).then( (res)=> {\n        console.log(res)\n        this.setState({ data: res});\n        // update counter status to other browsers \n        if(navigator.serviceWorker && navigator.serviceWorker.controller){\n          navigator.serviceWorker.controller.postMessage({\n            counterData: res \n          });\n        } \n      });\n  }\n\n\n  render(){\n    if(this.state.data.status === \"OF\" ){\n      return(\n      <button className=\"btn btn-lg btn-success\"\n          onClick={event => this.setCounterStatusOnline(event)}>\n          Go Online\n      </button>);\n    }else{\n      return(\n        <button className=\"btn btn-lg btn-danger\"\n            onClick={event => this.setCounterStatusOffline(event)}>\n            Go Offline\n        </button>);\n    }\n  }\n\n}\n\n\n\n","import './CounterManagerCard.css';\nimport CounterStatusButton  from './CounterStatusButton';\nimport ServiceApi from '../services/ServiceApi';\nimport React from 'react';\n\nexport default class  CounterManagerCard extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state  = {data : this.props.item}\n    \n    \n    // local sync across browsers instances \n    var self = this;\n    if('serviceWorker' in navigator){\n        navigator.serviceWorker\n        .register('./service-worker.js')\n        .then(()=> navigator.serviceWorker.ready).then(() => {\n          navigator.serviceWorker.addEventListener('message',function(event){\n            if(event.data && event.data.counterData !== undefined){\n              console.log(event.data.counterData);\n              // check is it belong to this component \n              if(event.data.counterData.id == self.state.data.id){\n                if(event.data.counterData.customer.toLowerCase() === \"queue empty\"){\n                  event.data.counterData.customer = null\n                }\n                self.setState({\n                  data: event.data.counterData\n                });\n              }\n            }\n          })\n        })\n      }\n  }\n  \n  onClickNexCustomer = (event, data) => {\n       \n    let updateData = this.state.data\n    updateData[\"status\"] = \"ON\";\n    ServiceApi.counterOnlineStatus(updateData).then( (res)=> {\n      console.log(res)\n      this.setState({ data: res});\n      // update counter status to other browsers \n      if(navigator.serviceWorker && navigator.serviceWorker.controller){\n        navigator.serviceWorker.controller.postMessage({\n          counterData: res \n        });\n      } \n    }).then(() => {\n\n      ServiceApi.getNextCounterInQueue(this.props.item).then((response) => {\n        data[\"customer\"] = response.results[0].id\n\n        // send the message to all other browsers \n        if(navigator.serviceWorker && navigator.serviceWorker.controller){\n          navigator.serviceWorker.controller.postMessage({\n            counterData: data\n          })\n          navigator.serviceWorker.controller.postMessage({\n            lastServed: data.customer\n          })\n        }\n\n        this.setState({\n          data\n        });\n        console.log(response.results[0])\n     \n      })\n    });\n  };\n\n\n\n\n  render() {\n  return (\n    <div className=\"card p-5 m-2\">\n      <h2 className='text-center mb-5'>\n      Counter  {this.state.data.id}  \n      </h2>\n      <CounterStatusButton item={this.state.data}  goOfflineAction={this.props.goOfflineAction} goOnlineAction={this.props.goOnlineAction} />\n      <h1 className='text-center my-5'>\n      {this.state.data.customer}\n      </h1>\n      <button className=\"btn btn-warning\" onClick={event => this.onClickNexCustomer(event, this.state.data)}>\n        Next Customer\n      </button>\n    </div>\n  )\n  }\n}\n","import React from 'react';\nimport './CounterManager.css';\n\nimport { AppContext } from '../AppContext';\n\nimport CounterManagerCard from '../components/CounterManagerCard'\nimport ServiceApi from '../services/ServiceApi';\n\n\n\n\n\nexport default class CounterManager extends React.Component {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n      pageIndex: 1,\n      totalItems: 0,\n    }\n    this.updateList();\n  }\n\n  updateList() {\n    const { pageIndex, filters } = this.state;\n    const queryParams = {};\n    ServiceApi.retrieveCounterList(pageIndex, queryParams).then((data) => {\n      const { results, count } = data;\n      this.setState({ list: results, totalItems: count });\n    });\n  }\n\n  async goOnlineAction(item) {\n    console.log(\"Go Online \"+item.id)\n    await this.context.setCounterStatusOnline(item);\n  \n  }\n\n  async goOfflineAction(item){\n    console.log(\"Go Offline \"+item.id)\n    await this.context.setCounterStatusOffline(item);\n  \n  }\n\n  async nextCustomerAction(item){\n    \n  }\n  render() {\n    const { list } = this.state;\n    return (\n      <section className='animate__animated animate__fadeIn'>\n        <header>\n        </header>\n        <section className=\"container\">\n          <div className='row'>\n          {list.map(item => {\n            return (\n              <div key={item.id} className='col'>\n                <CounterManagerCard\n                  item={item}\n                  nextCustomerAction={this.nextCustomerAction.bind(this)}\n                  goOfflineAction={this.goOfflineAction.bind(this)}\n                  goOnlineAction={this.goOnlineAction.bind(this)}\n                />\n            </div>\n            );\n          })}\n          </div>\n        </section>\n      </section>\n    );\n  }\n};\n","import React from \"react\";\r\n\r\nexport default class CustomerCounterStatusCard extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { data: this.props.item}\r\n        // local sync across browsers instances \r\n        var self = this;\r\n        if('serviceWorker' in navigator){\r\n            navigator.serviceWorker\r\n            .register('./service-worker.js')\r\n            .then(()=> navigator.serviceWorker.ready).then(() => {\r\n                navigator.serviceWorker.addEventListener('message',function(event){\r\n                    if(event.data && event.data.counterData !== undefined){\r\n                    // check is it belong to this component \r\n                    if(event.data.counterData.id == self.state.data.id){\r\n                        self.setState({\r\n                            data: event.data.counterData\r\n                        });\r\n                    }\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    counterStatus(){\r\n        let results;\r\n\r\n        if (this.state.data.status === \"OF\") {\r\n            results = (\r\n                <span className=\"bg-secondary text-secondary rounded-circle p-2 \">\r\n                    ......\r\n                </span>\r\n                );\r\n              \r\n        }else if (this.state.data.customer) {\r\n            results = (\r\n            <span className=\"bg-danger text-danger rounded-circle p-2 \">......</span>\r\n            );\r\n        \r\n        } else {\r\n            results = (\r\n                <span className=\"bg-success text-success rounded-circle p-2\">......</span>\r\n                );\r\n        }\r\n        return results;\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"p-4 m-2 card text-center\">\r\n            <div className=\"pb-2\">{this.counterStatus()}</div>\r\n            <h5 className=\"my-4\"> Counter {this.props.item.id} </h5>\r\n            <h1> {this.state.data.customer} </h1>\r\n          </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\nimport './CounterManager.css';\nimport { AppContext } from '../AppContext';\nimport CustomerCounterStatusCard from '../components/CustomerCounterStatusCard'\nimport CustomerTakeANumber  from '../components/CustomerTakeANumber';\nimport ServiceApi from '../services/ServiceApi';\n\n\nexport default class CounterManager extends React.Component {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n      pageIndex: 1,\n      totalItems: 0,\n    }\n    this.updateList();\n  }\n\n  updateList() {\n    const { pageIndex, filters } = this.state;\n    const queryParams = {};\n    ServiceApi.retrieveCounterList(pageIndex, queryParams).then((data) => {\n      const { results, count } = data;\n      this.setState({ list: results, totalItems: count });\n    });\n  }\n\n  async goOnlineAction(item) {\n    console.log(\"Go Online \"+item.id)\n    await this.context.setCounterStatusOnline(item);\n    this.props.history.push('/Counters');\n  }\n\n  async goOfflineAction(item){\n    console.log(\"Go Offline \"+item.id)\n    await this.context.setCounterStatusOffline(item);\n    const { history } = this.props;\n    history.push(\"/Customers\")\n  }\n\n  render() {\n    const { list } = this.state;\n    return (\n      <section className='animate__animated animate__fadeIn'>\n        <header>\n        </header>\n        <section className=\"container\">\n          <CustomerTakeANumber />\n          <div className='row'>\n          {list.map(item => {\n            return (\n              <div key={item.id} className='col'>\n                <CustomerCounterStatusCard\n                  item={item}\n                />\n            </div>\n            );\n          })}\n          </div>\n        </section>\n      </section>\n    );\n  }\n};\n","import React from 'react';\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\nimport './App.css';\n\nimport { AppContext } from './AppContext';\nimport Welcome from './pages/Welcome'\nimport CounterManager from './pages/CounterManager'\nimport Customers from './pages/Customers'\nimport AppSidebar from './AppSidebar';\nimport ServiceApi from './services/ServiceApi';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: null,\n      setCounterStatusOnline: this.setCounterStatusOnline.bind(this),\n      setCounterStatusOffline: this.setCounterStatusOffline.bind(this),\n    };\n    \n    // ServiceApi.retrieveWishlist().then((data) => {\n    //   this.setState({ wishlist: data });\n    // });\n\n  \n  }\n\n\n  setCounterStatusOnline(item){\n    return new Promise((resolve) => {\n      ServiceApi.counterStatus(item.id,true).then( ()=> {\n        this.setState({ item });\n\n        // update counter status to other browsers \n        if(navigator.serviceWorker && navigator.serviceWorker.controller){\n          navigator.serviceWorker.controller.postMessage({\n            counterData: item\n          })\n        }\n\n        resolve(item);\n      })\n      \n    });\n  }\n\n \n  setCounterStatusOffline(item){\n    return new Promise((resolve) => {\n      ServiceApi.counterStatus(item.id,false).then( ()=> {\n        this.setState({ item });\n\n        // update counter status to other browsers \n        if(navigator.serviceWorker && navigator.serviceWorker.controller){\n          navigator.serviceWorker.controller.postMessage({\n            counterData: item\n          })\n        } \n        resolve(item);\n      })\n      \n    });\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <nav className=\"\">\n            <div className=\"App-nav__main\">\n              <NavLink className=\"btn mx-4 p-2 text-light\" to=\"/\">Queue Ticketing System</NavLink>\n              <p className='mx-4 p-2 text-light'>V1.0 by Ismail AL.Mahdy</p>\n            </div>\n            <div className=\"App-nav__links\">\n            \n            </div>\n          </nav>\n          <section className=\"App-content\">\n            <AppContext.Provider value={this.state}>\n              <Route path=\"/\" exact component={Welcome} />\n              <Route path=\"/Counters\" exact component={CounterManager}/>\n              <Route path=\"/Customers\" exact component={Customers}/>\n            </AppContext.Provider>\n          </section>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//import * as serviceWorkerRegistration from './serviceWorkerRegistration';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.register();\n"],"sourceRoot":""}